name: OctoBot-CI
on: push

jobs:
  docker_build:
    name: ubuntu-latest - Docker - build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set Environment Variables
        run: |
          OWNER="$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]' | tr -d '-')"
          IMG=octobot
          echo "VERSION=${GITHUB_REF##*/}" >> $GITHUB_ENV
          echo "IMAGE=${OWNER}/${IMG}" >> $GITHUB_ENV
          echo "LATEST=0.4.0" >> $GITHUB_ENV
          echo "STABLE=0.4.0-stable" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Build
#        if: github.event_name == 'push' && !startsWith(github.ref, 'refs/tags') && github.ref != 'refs/heads/0.4.0'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm/v7
          push: false
          tags: ${{ env.IMAGE }}:${{ env.LATEST }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  notify:
    name: Notify
    runs-on: ubuntu-latest
    needs:
      - docker_build
    if: ${{ failure() }}

    steps:
      - name: Notify discord
        uses: sarisia/actions-status-discord@v1
        with:
          status: Failure
          webhook: ${{ secrets.DISCORD_GITHUB_WEBHOOK }}
